kubeControllerManager:
  endpoints:
    - 10.10.10.61
    - 10.10.10.62
    - 10.10.10.63

kubeEtcd:
  enabled: true
  endpoints:
    - 10.10.10.61
    - 10.10.10.62
    - 10.10.10.63
  service:
    enabled: true
    port: 2379
    targetPort: 2379
  serviceMonitor:
    scheme: https
    insecureSkipVerify: false
    serverName: localhost
    caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca.crt
    certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client.crt
    keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key.key

kubeScheduler:
  endpoints:
    - 10.10.10.61
    - 10.10.10.62
    - 10.10.10.63

grafana:
  adminPassword: grafana123
  ingress:
    enabled: true
    annotations: {}
    labels: {}
    hosts:
      - grafana.uclab8.net

  persistence:
    enabled: true
    type: sts
    storageClassName: synology-iscsi-storage
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    finalizers:
      - kubernetes.io/pvc-protection

prometheus:
  prometheusSpec:
    secrets:
      - etcd-client-cert
    podMonitorNamespaceSelector:
      matchLabels:
        podmonitorscrape: "true"
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
    - job_name: "kubernetes-pods"
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: ${1}:${2}
          target_label: __address__
